// 问题描述
// 　　123321是一个非常特殊的数，它从左边读和从右边读是一样的。
// 　　输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。
// 输入格式
// 　　输入一行，包含一个正整数n。
// 输出格式
// 　　按从小到大的顺序输出满足条件的整数，每个整数占一行。
// 样例输入
// 52
// 样例输出
// 899998
// 989989
// 998899
#include <iostream>
using namespace std;
int main()
{
    int m;
    cin >> m;
    for (long n = 10000; n < 100000; n++)
    {
        int a = n / 10000;
        int b = (n - a * 10000) / 1000;
        int c = (n - a * 10000 - b * 1000) / 100;          //第三个
        int d = (n - a * 10000 - b * 1000 - c * 100) / 10; //第四个
        int e = (n - a * 10000 - b * 1000 - c * 100) % 10; //第五个
        if (a == e && b == d)                              //是否为回文数
        {
            if (a + b + c + d + e == m) //是否为五位特殊回文数
            {
                cout << n << endl;
            }
        }
    }
    for (long n = 100000; n < 1000000; n++)
    {
        int a = n / 100000;                                             //第一个
        int b = (n - a * 100000) / 10000;                               //第二个
        int c = (n - a * 100000 - b * 10000) / 1000;                    //第三个
        int d = (n - a * 100000 - b * 10000 - c * 1000) / 100;          //第四个
        int e = (n - a * 100000 - b * 10000 - c * 1000 - d * 100) / 10; //第五个
        int f = (n - a * 100000 - b * 10000 - c * 1000 - d * 100) % 10; //第六个
        if (a == f && b == e && c == d)                                 //是否为回文数
        {
            if ((a + b + c + d + e + f) == m) //是否为六位特殊回文数
            {
                cout << n << endl;
            }
        }
    }
    return 0;
}
